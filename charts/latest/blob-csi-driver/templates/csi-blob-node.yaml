kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ .Values.node.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.node.name }}
    {{- include "blob.labels" . | nindent 4 }}
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.node.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.node.name }}
      {{- include "blob.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ .Values.node.name }}
        {{- include "blob.labels" . | nindent 8 }}
        {{- if .Values.workloadIdentity.clientID }}
        azure.workload.identity/use: "true"
        {{- end }}
        {{- if .Values.podLabels }}
{{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if or .Values.node.enableBlobfuseProxy .Values.node.enableAznfsMount }}
      hostPID: true
      {{- end }}
      hostNetwork: true
      dnsPolicy: Default
      serviceAccountName: {{ .Values.serviceAccount.node }}
      nodeSelector:
        kubernetes.io/os: linux
{{- with .Values.node.nodeSelector }}
{{ toYaml . | indent 8 }}
{{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
        {{- if .Values.node.affinity }}
{{- toYaml .Values.node.affinity | nindent 8 }}
        {{- end }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
{{- with .Values.node.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- if .Values.node.enableBlobfuseProxy }}
      initContainers:
        - name: install-blobfuse-proxy
{{- if hasPrefix "/" .Values.image.blob.repository }}
          image: "{{ .Values.image.baseRepo }}{{ .Values.image.blob.repository }}:{{ .Values.image.blob.tag }}"
{{- else }}
          image: "{{ .Values.image.blob.repository }}:{{ .Values.image.blob.tag }}"
{{- end }}
          imagePullPolicy: IfNotPresent
          command:
            - "/blobfuse-proxy/init.sh"
          securityContext:
            privileged: true
          env:
            - name: DEBIAN_FRONTEND
              value: "noninteractive"
            - name: INSTALL_BLOBFUSE
              value: "{{ .Values.node.blobfuseProxy.installBlobfuse }}"
            - name: BLOBFUSE_VERSION
              value: "{{ .Values.node.blobfuseProxy.blobfuseVersion }}"
            - name: INSTALL_BLOBFUSE2
              value: "{{ .Values.node.blobfuseProxy.installBlobfuse2 }}"
            - name: BLOBFUSE2_VERSION
              value: "{{ .Values.node.blobfuseProxy.blobfuse2Version }}"
            - name: SET_MAX_OPEN_FILE_NUM
              value: "{{ .Values.node.blobfuseProxy.setMaxOpenFileNum }}"
            - name: MAX_FILE_NUM
              value: "{{ .Values.node.blobfuseProxy.maxOpenFileNum }}"
            - name: DISABLE_UPDATEDB
              value: "{{ .Values.node.blobfuseProxy.disableUpdateDB }}"
          volumeMounts:
            - name: host-usr
              mountPath: /host/usr
            - name: host-etc
              mountPath: /host/etc
{{- end }}
      containers:
        - name: liveness-probe
          imagePullPolicy: {{ .Values.image.livenessProbe.pullPolicy }}
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
{{- if hasPrefix "/" .Values.image.livenessProbe.repository }}
          image: "{{ .Values.image.baseRepo }}{{ .Values.image.livenessProbe.repository }}:{{ .Values.image.livenessProbe.tag }}"
{{- else }}
          image: "{{ .Values.image.livenessProbe.repository }}:{{ .Values.image.livenessProbe.tag }}"
{{- end }}
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port={{ .Values.node.livenessProbe.healthPort }}
            - --v=2
          resources: {{- toYaml .Values.node.resources.livenessProbe | nindent 12 }}
        - name: node-driver-registrar
{{- if hasPrefix "/" .Values.image.nodeDriverRegistrar.repository }}
          image: "{{ .Values.image.baseRepo }}{{ .Values.image.nodeDriverRegistrar.repository }}:{{ .Values.image.nodeDriverRegistrar.tag }}"
{{- else }}
          image: "{{ .Values.image.nodeDriverRegistrar.repository }}:{{ .Values.image.nodeDriverRegistrar.tag }}"
{{- end }}
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=2
          livenessProbe:
            exec:
              command:
                - /csi-node-driver-registrar
                - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
                - --mode=kubelet-registration-probe
            initialDelaySeconds: 30
            timeoutSeconds: 15
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: {{ .Values.linux.kubelet }}/plugins/{{ .Values.driver.name }}/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          resources: {{- toYaml .Values.node.resources.nodeDriverRegistrar | nindent 12 }}
        - name: blob
{{- if hasPrefix "/" .Values.image.blob.repository }}
          image: "{{ .Values.image.baseRepo }}{{ .Values.image.blob.repository }}:{{ .Values.image.blob.tag }}"
{{- else }}
          image: "{{ .Values.image.blob.repository }}:{{ .Values.image.blob.tag }}"
{{- end }}
          args:
            - "--v={{ .Values.node.logLevel }}"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--blobfuse-proxy-endpoint=$(BLOBFUSE_PROXY_ENDPOINT)"
            - "--enable-blobfuse-proxy={{ .Values.node.enableBlobfuseProxy }}"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--drivername={{ .Values.driver.name }}"
            - "--cloud-config-secret-name={{ .Values.node.cloudConfigSecretName }}"
            - "--cloud-config-secret-namespace={{ .Values.node.cloudConfigSecretNamespace }}"
            - "--custom-user-agent={{ .Values.driver.customUserAgent }}"
            - "--user-agent-suffix={{ .Values.driver.userAgentSuffix }}"
            - "--allow-empty-cloud-config={{ .Values.node.allowEmptyCloudConfig }}"
            - "--enable-get-volume-stats={{ .Values.feature.enableGetVolumeStats }}"
            - "--append-timestamp-cache-dir={{ .Values.node.appendTimeStampInCacheDir }}"
            - "--mount-permissions={{ .Values.node.mountPermissions }}"
            - "--allow-inline-volume-key-access-with-idenitity={{ .Values.node.allowInlineVolumeKeyAccessWithIdentity }}"
            - "--enable-aznfs-mount={{ .Values.node.enableAznfsMount }}"
          ports:
            - containerPort: {{ .Values.node.livenessProbe.healthPort }}
              name: healthz
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 30
          env:
            - name: AZURE_CREDENTIAL_FILE
              valueFrom:
                configMapKeyRef:
                  name: azure-cred-file
                  key: path
                  optional: true
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: BLOBFUSE_PROXY_ENDPOINT
              value: unix:///csi/blobfuse-proxy.sock
            {{- if ne .Values.driver.httpsProxy "" }}
            - name: HTTPS_PROXY
              value: {{ .Values.driver.httpsProxy }}
            {{- end }}
            {{- if ne .Values.driver.httpProxy "" }}
            - name: HTTP_PROXY
              value: {{ .Values.driver.httpProxy }}
            {{- end }}
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: AZURE_GO_SDK_LOG_LEVEL
              value: {{ .Values.driver.azureGoSDKLogLevel }}
            {{- if eq .Values.cloud "AzureStackCloud" }}
            - name: AZURE_ENVIRONMENT_FILEPATH
              value: /etc/kubernetes/azurestackcloud.json
            {{- end }}
          imagePullPolicy: {{ .Values.image.blob.pullPolicy }}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
            - mountPath: {{ .Values.linux.kubelet }}/
              mountPropagation: Bidirectional
              name: mountpoint-dir
            - mountPath: /etc/kubernetes/
              name: azure-cred
            - mountPath: /mnt
              name: blob-cache
            {{- if eq .Values.cloud "AzureStackCloud" }}
            - name: ssl
              mountPath: /etc/ssl/certs
              readOnly: true
            {{- end }}
            {{- if eq .Values.linux.distro "fedora" }}
            - name: ssl
              mountPath: /etc/ssl/certs
              readOnly: true
            - name: ssl-pki
              mountPath: /etc/pki/ca-trust/extracted
              readOnly: true
            {{- end }}
            {{- if .Values.node.enableAznfsMount }}
            - mountPath: /opt/microsoft/aznfs/data
              name: aznfs-data
            {{- end }}
          resources: {{- toYaml .Values.node.resources.blob | nindent 12 }}
{{- if .Values.node.enableAznfsMount }}
        - name: aznfswatchdog
{{- if hasPrefix "/" .Values.image.blob.repository }}
          image: "{{ .Values.image.baseRepo }}{{ .Values.image.blob.repository }}:{{ .Values.image.blob.tag }}"
{{- else }}
          image: "{{ .Values.image.blob.repository }}:{{ .Values.image.blob.tag }}"
{{- end }}
          command:
            - "aznfswatchdog"
          imagePullPolicy: {{ .Values.image.blob.pullPolicy }}
          securityContext:
            privileged: true
          resources: {{- toYaml .Values.node.resources.aznfswatchdog | nindent 12 }}
          volumeMounts:
            - mountPath: /opt/microsoft/aznfs/data
              name: aznfs-data
            - mountPath: {{ .Values.linux.kubelet }}/
              mountPropagation: Bidirectional
              name: mountpoint-dir
{{- end }}
      volumes:
{{- if .Values.node.enableBlobfuseProxy }}
        - name: host-usr
          hostPath:
            path: /usr
        - name: host-etc
          hostPath:
            path: /etc
{{- end }}
        - hostPath:
            path: {{ .Values.linux.kubelet }}/plugins/{{ .Values.driver.name }}
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: {{ .Values.linux.kubelet }}/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: {{ .Values.linux.kubelet }}/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: {{ .Values.node.blobfuseCachePath }}
          name: blob-cache
        {{- if eq .Values.cloud "AzureStackCloud" }}
        - name: ssl
          hostPath:
            path: /etc/ssl/certs
        {{- end }}
        {{- if eq .Values.linux.distro "fedora" }}
        - name: ssl
          hostPath:
            path: /etc/ssl/certs
        - name: ssl-pki
          hostPath:
            path: /etc/pki/ca-trust/extracted
        {{- end }}
        {{- if .Values.node.enableAznfsMount }}
        - hostPath:
            path: /opt/microsoft/aznfs/data
            type: DirectoryOrCreate
          name: aznfs-data
        {{- end }}
      {{- if .Values.securityContext }}
      securityContext: {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
